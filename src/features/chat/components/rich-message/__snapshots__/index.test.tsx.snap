// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders giphy messages correctly 1`] = `
<Component
  fromUser={true}
  index={0}
  message={
    Object {
      "body": Object {
        "text": "https://giphy.com/mock.gif",
      },
      "header": Object {
        "editAllowed": false,
        "statusMessage": "mock",
      },
    }
  }
  withMargin={false}
>
  <Component
    fromUser={true}
    index={0}
    message={
      Object {
        "body": Object {
          "text": "https://giphy.com/mock.gif",
        },
        "header": Object {
          "editAllowed": false,
          "statusMessage": "mock",
        },
      }
    }
    withMargin={false}
  >
    <emotion(View)
      withMargin={false}
    >
      <View
        style={
          Object {
            "borderRadius": 20,
            "marginBottom": 0,
            "overflow": "hidden",
          }
        }
      >
        <react-native-mock>
          <emotion(ImageProgress)
            indicator={[Function]}
            indicatorProps={
              Object {
                "color": "#FF8A80",
                "size": 40,
                "thickness": 5,
              }
            }
            source={
              Object {
                "uri": "https://giphy.com/mock.gif",
              }
            }
          >
            <ImageProgress
              errorContainerStyle={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
              indicator={[Function]}
              indicatorContainerStyle={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
              indicatorProps={
                Object {
                  "color": "#FF8A80",
                  "size": 40,
                  "thickness": 5,
                }
              }
              source={
                Object {
                  "uri": "https://giphy.com/mock.gif",
                }
              }
              style={
                Object {
                  "height": 200,
                  "width": 280,
                }
              }
              threshold={50}
            >
              <View
                style={
                  Object {
                    "height": 200,
                    "width": 280,
                  }
                }
              >
                <react-native-mock>
                  <Image
                    key="https://giphy.com/mock.gif"
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadEnd={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    source={
                      Object {
                        "uri": "https://giphy.com/mock.gif",
                      }
                    }
                    style={
                      Array [
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <react-native-mock />
                  </Image>
                </react-native-mock>
              </View>
            </ImageProgress>
          </emotion(ImageProgress)>
          <emotion(View)>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomLeftRadius": 20,
                  "borderBottomRightRadius": 20,
                  "borderColor": "#E9ECEF",
                  "borderTopWidth": 0,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "padding": 10,
                  "paddingLeft": 15,
                }
              }
            >
              <react-native-mock>
                <Component
                  height={20}
                  width={20}
                >
                  <Svg
                    height={20}
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 38 48"
                    width={20}
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight="20"
                      bbWidth="20"
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          undefined,
                          false,
                          Object {
                            "flex": 0,
                            "height": 20,
                            "width": 20,
                          },
                        ]
                      }
                      vbHeight={48}
                      vbWidth={38}
                    />
                  </Svg>
                </Component>
                <emotion(View)
                  width={10}
                >
                  <View
                    style={
                      Object {
                        "height": 1,
                        "width": 10,
                      }
                    }
                    width={10}
                  >
                    <react-native-mock />
                  </View>
                </emotion(View)>
                <emotion(Text)>
                  <Text
                    style={
                      Object {
                        "color": "#9B9BAA",
                        "fontFamily": "Helvetica Neue",
                        "fontSize": 12,
                        "fontWeight": "500",
                        "marginTop": 1,
                      }
                    }
                  >
                    <react-native-mock>
                      GIPHY
                    </react-native-mock>
                  </Text>
                </emotion(Text)>
              </react-native-mock>
            </View>
          </emotion(View)>
        </react-native-mock>
      </View>
    </emotion(View)>
  </Component>
</Component>
`;

exports[`renders image messages correctly 1`] = `
<Component
  fromUser={true}
  index={0}
  message={
    Object {
      "body": Object {
        "text": "https://randomwebsite.com/image.jpg",
      },
      "header": Object {
        "editAllowed": false,
        "statusMessage": "mock",
      },
    }
  }
  withMargin={false}
>
  <Component
    fromUser={true}
    index={0}
    message={
      Object {
        "body": Object {
          "text": "https://randomwebsite.com/image.jpg",
        },
        "header": Object {
          "editAllowed": false,
          "statusMessage": "mock",
        },
      }
    }
    withMargin={false}
  >
    <emotion(View)
      withMargin={false}
    >
      <View
        style={
          Object {
            "borderColor": "#E9ECEF",
            "borderRadius": 20,
            "borderWidth": undefined,
            "marginBottom": 0,
            "overflow": "hidden",
          }
        }
      >
        <react-native-mock>
          <emotion(ImageProgress)
            indicator={[Function]}
            indicatorProps={
              Object {
                "color": "#651EFF",
                "size": 40,
                "thickness": 3,
              }
            }
            source={
              Object {
                "uri": "undefined/unsafe/400x560/smart/https%3A%2F%2Frandomwebsite.com%2Fimage.jpg",
              }
            }
          >
            <ImageProgress
              errorContainerStyle={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
              indicator={[Function]}
              indicatorContainerStyle={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
              indicatorProps={
                Object {
                  "color": "#651EFF",
                  "size": 40,
                  "thickness": 3,
                }
              }
              source={
                Object {
                  "uri": "undefined/unsafe/400x560/smart/https%3A%2F%2Frandomwebsite.com%2Fimage.jpg",
                }
              }
              style={
                Object {
                  "height": 200,
                  "width": 280,
                }
              }
              threshold={50}
            >
              <View
                style={
                  Object {
                    "height": 200,
                    "width": 280,
                  }
                }
              >
                <react-native-mock>
                  <Image
                    key="undefined/unsafe/400x560/smart/https%3A%2F%2Frandomwebsite.com%2Fimage.jpg"
                    onError={[Function]}
                    onLoad={[Function]}
                    onLoadEnd={[Function]}
                    onLoadStart={[Function]}
                    onProgress={[Function]}
                    source={
                      Object {
                        "uri": "undefined/unsafe/400x560/smart/https%3A%2F%2Frandomwebsite.com%2Fimage.jpg",
                      }
                    }
                    style={
                      Array [
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <react-native-mock />
                  </Image>
                </react-native-mock>
              </View>
            </ImageProgress>
          </emotion(ImageProgress)>
        </react-native-mock>
      </View>
    </emotion(View)>
  </Component>
</Component>
`;

exports[`renders text messages correctly 1`] = `
<Component
  fromUser={true}
  index={0}
  message={
    Object {
      "body": Object {
        "text": "mock message hello 123",
      },
      "header": Object {
        "editAllowed": false,
        "statusMessage": "mock",
      },
    }
  }
  withMargin={false}
>
  <Component
    fromUser={true}
    index={0}
    message={
      Object {
        "body": Object {
          "text": "mock message hello 123",
        },
        "header": Object {
          "editAllowed": false,
          "statusMessage": "mock",
        },
      }
    }
    withMargin={false}
  >
    <Container
      actions={
        Object {
          "setShowEditDialog": [Function],
        }
      }
      initialState={
        Object {
          "showEditDialog": false,
        }
      }
    >
      <InnerContainer
        actions={
          Object {
            "setShowEditDialog": [Function],
          }
        }
        initialState={
          Object {
            "showEditDialog": false,
          }
        }
      >
        <StyledUserChatMessage
          withMargin={false}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "backgroundColor": "#651EFF",
                  "borderColor": "#651EFF",
                  "borderRadius": 24,
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 2,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            <react-native-mock>
              <_class
                linkDefault={true}
                linkStyle={
                  Object {
                    "textDecorationLine": "underline",
                  }
                }
              >
                <Hyperlink
                  linkDefault={true}
                  linkStyle={
                    Object {
                      "textDecorationLine": "underline",
                    }
                  }
                  onPress={[Function]}
                >
                  <View>
                    <react-native-mock>
                      <StyledDefaultUserMessageText
                        fromUser={true}
                        key=".0"
                      >
                        <Text
                          fromUser={true}
                          selectable={true}
                          style={
                            Array [
                              undefined,
                              Object {
                                "color": "#FFFFFF",
                                "fontFamily": "CircularStd-Book",
                                "fontSize": 16,
                                "textAlign": "left",
                              },
                            ]
                          }
                        >
                          <react-native-mock>
                            mock message hello 123
                          </react-native-mock>
                        </Text>
                      </StyledDefaultUserMessageText>
                    </react-native-mock>
                  </View>
                </Hyperlink>
              </_class>
            </react-native-mock>
          </View>
        </StyledUserChatMessage>
      </InnerContainer>
    </Container>
  </Component>
</Component>
`;

exports[`renders text messages with hyperlinks correctly 1`] = `
<Component
  fromUser={true}
  index={0}
  message={
    Object {
      "body": Object {
        "text": "mock message hello 123 https://www.hedvig.com",
      },
      "header": Object {
        "editAllowed": false,
        "statusMessage": "mock",
      },
    }
  }
  withMargin={false}
>
  <Component
    fromUser={true}
    index={0}
    message={
      Object {
        "body": Object {
          "text": "mock message hello 123 https://www.hedvig.com",
        },
        "header": Object {
          "editAllowed": false,
          "statusMessage": "mock",
        },
      }
    }
    withMargin={false}
  >
    <Container
      actions={
        Object {
          "setShowEditDialog": [Function],
        }
      }
      initialState={
        Object {
          "showEditDialog": false,
        }
      }
    >
      <InnerContainer
        actions={
          Object {
            "setShowEditDialog": [Function],
          }
        }
        initialState={
          Object {
            "showEditDialog": false,
          }
        }
      >
        <StyledUserChatMessage
          withMargin={false}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "backgroundColor": "#651EFF",
                  "borderColor": "#651EFF",
                  "borderRadius": 24,
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "marginBottom": 2,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            <react-native-mock>
              <_class
                linkDefault={true}
                linkStyle={
                  Object {
                    "textDecorationLine": "underline",
                  }
                }
              >
                <Hyperlink
                  linkDefault={true}
                  linkStyle={
                    Object {
                      "textDecorationLine": "underline",
                    }
                  }
                  onPress={[Function]}
                >
                  <View>
                    <react-native-mock>
                      <StyledDefaultUserMessageText
                        fromUser={true}
                        key=".0"
                      >
                        <Text
                          fromUser={true}
                          selectable={true}
                          style={
                            Array [
                              undefined,
                              Object {
                                "color": "#FFFFFF",
                                "fontFamily": "CircularStd-Book",
                                "fontSize": 16,
                                "textAlign": "left",
                              },
                            ]
                          }
                        >
                          <react-native-mock>
                            <Text
                              fromUser={true}
                              key=".0"
                            >
                              <react-native-mock>
                                mock message hello 123 
                                <Text
                                  fromUser={true}
                                  key="https://www.hedvig.com23"
                                  onPress={[Function]}
                                  style={
                                    Array [
                                      undefined,
                                      Object {
                                        "textDecorationLine": "underline",
                                      },
                                    ]
                                  }
                                >
                                  <react-native-mock>
                                    https://www.hedvig.com
                                  </react-native-mock>
                                </Text>
                              </react-native-mock>
                            </Text>
                          </react-native-mock>
                        </Text>
                      </StyledDefaultUserMessageText>
                    </react-native-mock>
                  </View>
                </Hyperlink>
              </_class>
            </react-native-mock>
          </View>
        </StyledUserChatMessage>
      </InnerContainer>
    </Container>
  </Component>
</Component>
`;
