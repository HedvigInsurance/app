apply plugin: 'com.android.application'
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

import com.android.build.OutputFile

project.ext.react = [
  entryFile: "index.js",
  bundleInStaging: true,
  devDisabledInStaging: true
]

apply from: '../../node_modules/react-native/react.gradle'

def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = false

android {
  compileSdkVersion 28
  buildToolsVersion '28.0.2'

  defaultConfig {
    applicationId project.env.get('APP_ID')
    minSdkVersion 19
    multiDexEnabled true
    versionCode 33
    versionName '2.0.0'
    missingDimensionStrategy "RNN.reactNativeVersion", "reactNative56"

    resValue "string", "build_config_package", "com.hedvig.app"

    ndk {
      abiFilters 'armeabi-v7a', 'x86'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  splits {
    abi {
      reset()
      enable enableSeparateBuildPerCPUArchitecture
      universalApk true
      include 'armeabi-v7a', 'x86'
    }
  }

  buildTypes {
    release {
      minifyEnabled enableProguardInReleaseBuilds
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    staging {

    }

    debug {
      debuggable true
    }
  }

  applicationVariants.all { variant ->
    variant.outputs.each { output ->
      def versionCodes = ['armeabi-v7a':1, 'x86':2]
      def abi = output.getFilter(OutputFile.ABI)
      if (abi != null) {
        output.versionCodeOverride = versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
      }
    }
  }
}

dependencies {
  // Link dependencies
  compile project(':react-native-svg')
  compile project(':react-native-config')
  compile project(':rn-fetch-blob')
  compile project(':react-native-sound')
  compile project(':react-native-sentry')
  compile project(':react-native-firebase')
  compile project(':react-native-branch')
  compile project(':react-native-audio')
  compile project(':react-native-analytics-segment-io')
  compile project(':lottie-react-native')
  compile project(':react-native-code-push')

  // React-Native-Navigation
  implementation project(':react-native-navigation')
  implementation 'com.android.support:design:27.1.1'

  // Firebase
  implementation project(':react-native-firebase')
  implementation 'com.google.android.gms:play-services-base:15.0.1'
  implementation 'com.google.firebase:firebase-core:16.0.1'
  implementation 'com.google.firebase:firebase-messaging:17.3.0'
  implementation 'me.leolin:ShortcutBadger:1.1.21@aar'

  // Segment
  implementation 'com.google.android.gms:play-services-ads:15.0.1'
  compile 'com.segment.analytics.android:analytics:4.2.6'
  compile 'com.android.support:multidex:1.0.3'
  // compile 'io.branch.segment.analytics.android.integrations:branch:1.0.2-RELEASE'
}

apply plugin: 'com.google.gms.google-services'
com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true
