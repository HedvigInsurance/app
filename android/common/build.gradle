apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.apollographql.android'

apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

apollo {
    generateModelBuilder = true
    customTypeMapping = [
            "URL"      : "java.lang.String",
            "LocalDate": "org.threeten.bp.LocalDate"
    ]
}

androidExtensions {
    experimental = true
}

android {

    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(':react-native-image-picker')
    api project(':react-native-fs')
    api project(':react-native-svg')
    api project(':react-native-config')
    api project(':react-native-sound')
    api project(':react-native-sentry')
    api project(':react-native-branch')
    api project(':react-native-audio')
    api project(':react-native-analytics-segment-io')

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Apollo
    api "com.apollographql.apollo:apollo-runtime:$apollo_version"
    api "com.apollographql.apollo:apollo-android-support:$apollo_version"
    api "com.apollographql.apollo:apollo-rx2-support:$apollo_version"
    androidTestApi "com.apollographql.apollo:apollo-espresso-support:$apollo_version"


    // Android support
    def support_version = "28.0.0"
    api 'com.android.support:multidex:1.0.3'
    api "com.android.support:appcompat-v7:$support_version"
    api "com.android.support:exifinterface:$support_version"
    api "com.android.support:support-media-compat:$support_version"
    api "com.android.support:support-v4:$support_version"
    api 'com.android.support.constraint:constraint-layout:1.1.3'
    api "com.android.support:design:$support_version"
    
    
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api "com.google.firebase:firebase-core:16.0.9"
    api "com.google.firebase:firebase-dynamic-links:17.0.0"
    api "com.google.firebase:firebase-firestore:19.0.0"
    api 'com.google.firebase:firebase-config:17.0.0'
    api "com.google.firebase:firebase-messaging:18.0.0"

    // Navigation
    def navigation_version = '1.0.0'
    api "android.arch.navigation:navigation-fragment:$navigation_version"
    api "android.arch.navigation:navigation-ui:$navigation_version"
    api "android.arch.navigation:navigation-runtime-ktx:$navigation_version"

    // Timber
    api 'com.jakewharton.timber:timber:4.7.1'

    // Lottie
    api "com.airbnb.android:lottie:2.5.5"

    api 'net.ypresto.timbertreeutils:timbertreeutils:1.0.0'

    api 'com.jakewharton.threetenabp:threetenabp:1.2.0'


    // Svg
    api 'com.caverock:androidsvg-aar:1.3'


    // Glide
    api "com.github.bumptech.glide:glide:4.9.0"
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    // Restring
    api 'com.hedvig.restring:restring:0.0.1'

}

apply plugin: 'com.hedvig.textkeys'

textkeys {
    graphqlEndpoint = 'https://api-euwest.graphcms.com/v1/cjmawd9hw036a01cuzmjhplka/master'
    defaultLanguageCode = rootProject.ext.defaultLanguage
    excludedLanguages = rootProject.ext.excludedLanguages
}

task updateSchema(type: Exec) {
    group = 'GraphQL'
    description = 'Fetches the latest schema from our dev GraphQL-server'

    commandLine 'apollo', 'schema:download', '--endpoint=https://graphql.dev.hedvigit.com/graphql', "$projectDir/src/main/graphql/com/hedvig/common/owldroid/schema.json"
}